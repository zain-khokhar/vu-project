[
  {
    "id": 1,
    "question": "Consider the following infix expression. 7/8+9 If one converts the above expression into postfix, what would be the resultant expression?",
    "options": ["789/+", "78/+9", "/78+9", "78/9+"],
    "correct": "78/9+",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 2,
    "question": "Suppose there are 100 elements in an equivalence classes so initially there will be 100 tree.The collection of tree is called_",
    "options": ["Cluster", "Class", "Forest", "Bunch"],
    "correct": "Forest",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 3,
    "question": "For a perfect binary tree of height h, having N nodes the sum of height of nodes is",
    "options": ["N-h-1", "N-1", "N-1+h", "-(h-1)"],
    "correct": "N-1",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 4,
    "question": "Sorting procedure normally takes ______time",
    "options": ["N log N", "2 N", "N*N*N", "N"],
    "correct": "N log N",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 5,
    "question": "there are 100 elements in an equivalence classes then will have ______state initially",
    "options": ["50", "100", "1000", "80"],
    "correct": "100",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 6,
    "question": "________ objects (objects accessed by pointers) are called anonymous objects.",
    "options": ["Private", "Nameless", "Friend", "Public"],
    "correct": "Nameless",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 7,
    "question": "___________ is a self-balancing tree.",
    "options": ["AVL", "Binary Tree", "Binary Search Tree", "ALV"],
    "correct": "AVL",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 8,
    "question": "Which of the following operation returns but do not removes top value of the stack?",
    "options": ["Push", "Pop", "Top", "First"],
    "correct": "Top",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 9,
    "question": "Int htdiff = height(root->getLeft()) __________ height(root->getRight()); The above line of code is taken from AVL insert method. Complete it by selecting an appropriate symbol.",
    "options": ["-", "+", "/", "*"],
    "correct": "-",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 10,
    "question": "Which operation of the queue data structure is used to insert an element into the Queue?",
    "options": ["Enqueue()", "Dequeue()", "Fornt()", "Remove()"],
    "correct": "Enqueue()",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 11,
    "question": "For making binary search tree for strings we need, ________ data type.",
    "options": ["Char", "Int", "Float", "Double"],
    "correct": "Char",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 12,
    "question": "Local variables defined inside function body are ________ automatically at the end of function execution.",
    "options": ["Created", "Destroyed", "Incremented", "Decremented"],
    "correct": "Destroyed",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 13,
    "question": "If a node has three fields, then this node will be related to",
    "options": [
      "Linked list",
      "Doubly linked list",
      "Circular linked list",
      "All of the given"
    ],
    "correct": "Doubly linked list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 14,
    "question": "________ is an area in computer memory that is allocated dynamically.",
    "options": ["Heap", "Stack", "Queue", "Linked list"],
    "correct": "Heap",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 15,
    "question": "Linked list use _______ to store data.",
    "options": ["Array", "2-D Array", "Variables", "Linked Memory"],
    "correct": "Linked Memory",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 16,
    "question": "The lifetime of a transient object cannot exceed that of the application.",
    "options": ["True", "False", "In some cases", "None of the given"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 17,
    "question": "To represent hierarchical relationship between elements, which data structure is suitable?",
    "options": ["Dequeue", "Priority", "Stack", "Tree"],
    "correct": "Tree",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 18,
    "question": "Local variables of a function are stored in,",
    "options": ["Binary search tree", "Stack", "Queue", "AVL tree"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 19,
    "question": "In-order traversal method traverses tha data in",
    "options": [
      "Non sorted order",
      "Random order",
      "Sorted order",
      "None of the given"
    ],
    "correct": "Sorted order",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 20,
    "question": "Dequeue() operation of queue data structure is used to _________",
    "options": [
      "Get an element from the front of the queue",
      "Remove an element from the front and return it",
      "Insert an element at the front",
      "Insert an element at the back"
    ],
    "correct": "Remove an element from the front and return it",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 21,
    "question": "In a tree, we link the nodes in such a way that it _________ a linear structure.",
    "options": ["Does not remain", "Forms", "Reverses", "Remains"],
    "correct": "Does not remain",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 22,
    "question": "Factorial is an example of ________ function.",
    "options": ["Recursive", "Non-recursive", "Cube", "Log"],
    "correct": "Recursive",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 23,
    "question": "All the objects created using _________ operator have to be explicitly destroyed using delete operator.",
    "options": ["New", "Delete", "Del", "Create"],
    "correct": "New",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 24,
    "question": "In the calling function, after the execution of the function called, the program continues its execution from the _______ after the function call.",
    "options": ["Previous line", "Next line", "Beginning", "None of the above"],
    "correct": "Next line",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 25,
    "question": "Last node in circular linked list contains",
    "options": [
      "At least one null pointer",
      "No null pointer",
      "Maximum two null pointers",
      "None of the given"
    ],
    "correct": "No null pointer",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 26,
    "question": "One should be careful about transient _______ that are stored by reference in data structures.",
    "options": ["Objects", "Stack", "Function", "Tree"],
    "correct": "Objects",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 27,
    "question": "Binary search tree violates the condition of AVL tree when any node has balance equal to",
    "options": ["2 or -2", "1 or -1", "0", "None of the options"],
    "correct": "2 or -2",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 28,
    "question": "Security of data is the main usage of AVL tree.",
    "options": ["True", "False", "In some cases", "None of the given"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 29,
    "question": "A binary tree whose every node has either zero or two children is called _________.",
    "options": [
      "Complete binary tree",
      "Binary search tree",
      "Strictly binary tree",
      "None of above"
    ],
    "correct": "Strictly binary tree",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 30,
    "question": "In internal memory organization of a process, there is some area of memory for static data that holds _________ variables.",
    "options": [
      "Static",
      "Global",
      "Not static neither global",
      "Both static and global"
    ],
    "correct": "Both static and global",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 31,
    "question": "Following is true in case of using recursive method calls.",
    "options": [
      "The code becomes very long",
      "There is no effect on length of code",
      "The code becomes very short",
      "Code becomes very easy to understand"
    ],
    "correct": "The code becomes very short",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 32,
    "question": "In which traversal method, the recursive calls can be used to traverse a binary tree?",
    "options": [
      "In preorder traversal only",
      "In inorder traversal only",
      "In postorder traversal only",
      "All of the given options"
    ],
    "correct": "All of the given options",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 33,
    "question": "If we use doubly linked list to implement list then there is an issue of",
    "options": [
      "Next pointer of first node and pre pointer of last node are NULL",
      "Next pointer of first node and next pointer of last node are NULL",
      "Pre pointer of first node and next pointer of last node are NULL",
      "Pre pointer of first node and pre pointer of last node are NULL"
    ],
    "correct": "Pre pointer of first node and next pointer of last node are NULL",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 34,
    "question": "In case of insertion of left outer node in BST,",
    "options": [
      "We apply single right rotation to make it AVL tree.",
      "We apply single left rotation to make it AVL tree.",
      "We first apply right rotation and then left rotation to make it AVL tree.",
      "We first apply left rotation and then right rotation to make it AVL tree."
    ],
    "correct": "We apply single right rotation to make it AVL tree.",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 35,
    "question": "Whenever we call a function, the complier makes a stack, the top element of the stack is _____ of the function.",
    "options": [
      "First argument",
      "Return address",
      "Last argument",
      "None of the above"
    ],
    "correct": "Return address",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 36,
    "question": "Suppose a stack class has been defined using template. Now, we want to declare a Stack object of an int type. What will be the correct syntax?",
    "options": [
      "<int>Stack stack;",
      "Stack<int> stack;",
      "Stack int stack;",
      "Int Stack stack;"
    ],
    "correct": "Stack<int> stack;",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 37,
    "question": "In node class one field is an integer data and other field will be _______",
    "options": [
      "Pointer to class",
      "Pointer to node",
      "Pointer to integer",
      "None of given options"
    ],
    "correct": "Pointer to node",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 38,
    "question": "If there are 100,0000 unique members (nodes) stored in a complete binary tree, the tree will have ______ levels.",
    "options": ["10", "20", "30", "40"],
    "correct": "20",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 39,
    "question": "~BinarySearchTree() is a ________.",
    "options": [
      "Constructor",
      "Destructor",
      "Switch case",
      "Template method call"
    ],
    "correct": "Destructor",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 40,
    "question": "_______ is utilized at the time of memory allocation in dynamic manner.",
    "options": ["Stack", "Queue", "Heap", "All of the given"],
    "correct": "Heap",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 41,
    "question": "How many cases of rotation are there in AVL tree?",
    "options": ["2", "4", "6", "8"],
    "correct": "4",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 42,
    "question": "A list is the collection of items of the __________",
    "options": [
      "May be of same or may be of different type",
      "Different type",
      "Same type",
      "None of the above"
    ],
    "correct": "May be of same or may be of different type",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 43,
    "question": "Int * i = new int[10]; Above given code will:",
    "options": [
      "Create an integer having value 10",
      "Allocate memory for 9 integers",
      "Allocate memory for 10 integers",
      "Create 10 pointers of integer type"
    ],
    "correct": "Allocate memory for 10 integers",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 44,
    "question": "The depth of a binary tree is",
    "options": [
      "Total number of nodes in the tree",
      "Number of leaf nodes in the tree",
      "Number of non-leaf nodes in the tree",
      "Maximum level of a leaf"
    ],
    "correct": "Maximum level of a leaf",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 45,
    "question": "A ________ model attempts to model a real-world phenomenon",
    "options": ["Physical", "Logical", "Simulation", "Conceptual"],
    "correct": "Simulation",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 46,
    "question": "In level-order traversal for binary search tree, we visit the nodes at each level before proceeding to the next level, in a __________ order.",
    "options": [
      "Right-to-left",
      "Left-to-right",
      "Top-to-bottom",
      "Bottom-to-top"
    ],
    "correct": "Left-to-right",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 47,
    "question": "The balance of a node in a binary tree is defined as the height of its ________ sub tree minus height of its right sub tree.",
    "options": ["Right", "Left", "Upper", "Lower"],
    "correct": "Left",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 48,
    "question": "Allocating and de-allocating memory for linked list nodes does take _______ time than pre-allocated array.",
    "options": ["Less", "More", "Equal", "No"],
    "correct": "More",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 49,
    "question": "Consider we have performed the following operations on a stack of size 5. Push(10); Push(20); Push(30); Pop(); Pop(); Pop(); Push(40); Push(50); Pop(); After the completion of all operation, the top element in stack is _______.",
    "options": ["10", "20", "40", "50"],
    "correct": "40",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 50,
    "question": "Each operator in a postfix expression refers to the previous _______ operand(s).",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 51,
    "question": "In doubly linked list a node consists of three parts:",
    "options": [
      "1 pointer and 2 objects",
      "2 pointers and 1 object",
      "3 objects",
      "3 pointers"
    ],
    "correct": "2 pointers and 1 object",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 52,
    "question": "For reference variables, ________ sign is used.",
    "options": ["Ampersand", "Asterisk", "Sigma", "Dollar"],
    "correct": "Ampersand",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 53,
    "question": "Which of the following data structure is linear type?",
    "options": ["Stack", "List", "Queue", "All of the above"],
    "correct": "All of the above",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 54,
    "question": "The - - is a decrement operator in C++ that decreases the value of the operand by ______.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "One",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 55,
    "question": "Which of the following statement is correct for the variable “current- -“?",
    "options": [
      "Current = current + 1",
      "Current = current - 1",
      "Current = current - 2",
      "Current - 1 = current"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 56,
    "question": "When an executable program runs, it is loaded in the computer memory and becomes a _______.",
    "options": ["Thread", ".h file", "Process", "None of the above"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 57,
    "question": "start() method of list class is used to:",
    "options": [
      "Moves the “current” pointer to very first element",
      "Moves the “current” pointer to very last element",
      "Moves the “current” pointer to one step after the first element of the array",
      "Moves the “current” pointer to one step before the first element of the array"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 58,
    "question": "a * (b + c) - d is an example of _______ expression.",
    "options": ["Infix", "Prefix", "Postfix", "Alfix"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 59,
    "question": "In a program a reference variable, say x, can be declared as",
    "options": ["int &x;", "int *x;", "int x;", "none of the given options"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 60,
    "question": "We allocate memory dynamically by using ______ operator.",
    "options": ["This", "New", "Increment", "Decrement"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 61,
    "question": "Get(?) method of list class is used to:",
    "options": [
      "Get element from the last position",
      "Get element from the first position",
      "Get element from the middle position",
      "Get element at the given position"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 62,
    "question": "STL is a _______ that is a part of the official standard of C++.",
    "options": ["C program file", ".h file", ".cpp file", "Library"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 63,
    "question": "There are ____ cases for deleting a node from binary search tree.",
    "options": ["1", "2", "3", "4"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 64,
    "question": "In a list, tail() method of current pointer ________",
    "options": [
      "Returns the last element of the “current” pointer",
      "Moves the “current” pointer to the very first element",
      "Moves the “current” pointer to the very last element",
      "Returns the first element of the “current” pointer"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 65,
    "question": "Suppose we have been given the following data set for a queue:",
    "options": [],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 66,
    "question": "What will be the resultant queue if we call a front() method?",
    "options": ["7524", "37524", "75243", "5 2 4"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 67,
    "question": "Suppose we have been given the following data set for a queue:",
    "options": [],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 68,
    "question": "What will be the resultant queue if we call enqueue(3) method? Note that 7 is the front element whereas 4 is rear element of queue.",
    "options": ["7524", "37524", "75243", "5243"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 69,
    "question": "Maximum time that an insertion operation can take in AVL tree is _______. Here log stands for log to the base of 2.",
    "options": ["Log (n)", "1.44 log (n)", "1.66 log (n)", "Log (n+1)"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 70,
    "question": "_______ is when function is calling to itself.",
    "options": ["Loop", "Recursion", "Iteration", "Nested loop"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 71,
    "question": "Left, right, info, and parent are the operations of ________ data structure.",
    "options": ["Stack", "Tree", "Queue", "Linked list"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 72,
    "question": "Following is a keyword of C++",
    "options": ["Del", "Delete", "Remove", "Eliminate"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 73,
    "question": "The expression DE+H* is called ______",
    "options": [
      "Prefix expression",
      "Infix expression",
      "Postfix expression",
      "Hybrid expression"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 74,
    "question": "A software solution is said to be efficient if it solves the problem __________.",
    "options": [
      "By using some extra resources",
      "Within no time",
      "By consuming more hardware resources",
      "Within its resources constraints"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 75,
    "question": "Each node in a singly linked list contains two fields, one field called data field while other field contains:",
    "options": [
      "Pointer to an integer",
      "Pointer to character",
      "Pointer to next node",
      "Pointer to class"
    ],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 76,
    "question": "Every AVL tree is a binary search tree.",
    "options": ["True", "False", "Not in some cases", "None of the given"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 77,
    "question": "In singly linked list “next” field of node contains:",
    "options": [
      "Address of next node",
      "Object of next node",
      "Object of current node",
      "Address of head node"
    ],
    "correct": "Address of next node",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 78,
    "question": "Two common models of simulation are _____ and _____.",
    "options": [
      "Circuit-based simulation and Event- based simulation",
      "Circuit-based simulation and Time-based simulation",
      "Time-based simulation and Event- based simulation",
      "None of the above"
    ],
    "correct": "Time-based simulation and Event- based simulation",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 79,
    "question": "Stack and Queue can be implements using _____.",
    "options": [
      "Singly Link List",
      "Binary Tree",
      "Binary search Tree",
      "AVL Tree"
    ],
    "correct": "Singly Link List",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 80,
    "question": "What are the basic things associated with data structures?",
    "options": [
      "Space for each data item it stores",
      "Time to perform each basic operation",
      "Programming effort",
      "All of the above"
    ],
    "correct": "All of the above",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 81,
    "question": "In AVL tree insertion occurs on the inside in case ____ and 3 which a single rotation cannot fix.",
    "options": ["1", "2", "4", "5"],
    "correct": "2",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 82,
    "question": "add(12) method of linked list class will",
    "options": [
      "Add 12 nodes in linked list",
      "Add 12 pointers in linked list",
      "Add 12 as value in linked list",
      "Add 12 values in linked list"
    ],
    "correct": "Add 12 as value in linked list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 83,
    "question": "Which of the following is a non- linear data structure?",
    "options": ["Stack", "Queue", "Tree", "Linked list"],
    "correct": "Tree",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 84,
    "question": "Which data structure allows deleting data elements from front anf inserting at rear?",
    "options": ["Stacks", "Queues", "Deques", "Binary search tree"],
    "correct": "Queues",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 85,
    "question": "Array cells are ____ in computer memory.",
    "options": [
      "Contiguous",
      "Random",
      "Store in multiple Variables",
      "Store in multiple functions"
    ],
    "correct": "Contiguous",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 86,
    "question": "A kind of expression where the operator is present between two operands called ____expressions.",
    "options": ["Infix", "Postfix", "Prefix", "None of the above"],
    "correct": "Infix",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 87,
    "question": "back() method of list class is used to",
    "options": [
      "Moves the \"current\" pointer to backward one element.",
      "Moves the \"current\" pointer to backward two element.",
      "Moves the \"current\" pointer to backward three element.",
      "Moves the \"current\" pointer to backward four element."
    ],
    "correct": "Moves the \"current\" pointer to backward one element.",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 88,
    "question": "next() method of List class is used to:",
    "options": [
      "Moves the Current position backward one element",
      "Moves the \"Current\" pointer to two steps after the last element of the array",
      "Moves the Current position forward one element",
      "Moves the \"Current\" pointer to two steps before the last element of the array"
    ],
    "correct": "Moves the Current position forward one element",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 89,
    "question": "_________tree has been named after two persons AdelsonVelskii and Landis.",
    "options": ["Binary", "Black", "AVL", "VLA"],
    "correct": "AVL",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 90,
    "question": "There are four cases of rotation in an _______ tree.",
    "options": ["ELV", "EVL", "AVL", "ALV"],
    "correct": "AVL",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 91,
    "question": "_______ is used for reference variable in C++.",
    "options": ["!", "@", "#", "&"],
    "correct": "&",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 92,
    "question": "A _______ is a tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.",
    "options": [
      "Strict binary tree",
      "Full binary tree",
      "Perfect binary tree",
      "Complete binary tree"
    ],
    "correct": "Complete binary tree",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 93,
    "question": "A queue is a data structure where elements are",
    "options": [
      "Inserted at the front and removed from the back",
      "Inserted and removed from the top",
      "Inserted at the back and removed from the front",
      "Inserted and removed from both ends"
    ],
    "correct": "Inserted at the back and removed from the front",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 94,
    "question": "Longest path from root node to farthest leaf node is called _______ of tree.",
    "options": ["Level", "Length", "Depth", "Node level"],
    "correct": "Depth",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 95,
    "question": "New items are added at the ______ of the stack.",
    "options": ["Bottom", "Middle", "Center", "Top"],
    "correct": "Top",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 96,
    "question": "Length() method of list class is used to:",
    "options": [
      "Return the length of the array",
      "Return the length of the list",
      "Return the length of empty part of the array",
      "Return the length of empty part of the list"
    ],
    "correct": "Return the length of the list",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 97,
    "question": "The function calls are made with the help of ________.",
    "options": ["Stack", "Heap", "Dynamic memory", "External memory"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 98,
    "question": "An efficient program execute faster and helps in _____ the usage of resources like memory and disk",
    "options": ["Maximizing", "Minimizing", "Equalizing", "None of the given"],
    "correct": "Minimizing",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 99,
    "question": "Generalized code written for a class is called:",
    "options": ["Function", "Template", "Structure", "Stack"],
    "correct": "Template",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 100,
    "question": "\"set()\" method of list class is used to:",
    "options": [
      "Set the value of Pointer",
      "Set the value of Null Nodes",
      "Set the value of objects",
      "Set the value of Value"
    ],
    "correct": "Set the value of objects",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 101,
    "question": "In C++, we place the class interface in ___ file.",
    "options": [".cpp", ".cppp", ".h", ".hh"],
    "correct": ".h",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 102,
    "question": "Every _____ tree is a binary search tree.",
    "options": ["AVL", "binary", "big", "small"],
    "correct": "AVL",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 103,
    "question": "If both left and right nodes of a node are NULL then this type of node is called ____ node.",
    "options": ["Non leaf", "internal", "inner", "leaf"],
    "correct": "leaf",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 104,
    "question": "Which of the following function don’t belongs to the stack class?",
    "options": ["push()", "pop()", "crash()", "top()"],
    "correct": "crash()",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 105,
    "question": "For a complete binary tree, the depth is calculated as____",
    "options": [
      "log2(number of nodes+1)-1",
      "log2(number of nodes*1)+1",
      "log2(number of nodes-1)-1",
      "log2(number of nodes-1)+1"
    ],
    "correct": "log2(number of nodes+1)-1",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 106,
    "question": "___ only removes items in reverse order as they were entered",
    "options": ["Queue", "Stack", "Both of these", "None of these"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 107,
    "question": "What will be the postfix expression of following infix expression? D+E*F/G",
    "options": ["DE*F/G", "DE+F*G/", "DEF*/+", "DE+FG*/"],
    "correct": "DEF*/+",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 108,
    "question": "The ______ of a node in a binary tree is defined as the height of its ________ sub tree minus height of its right sub tree.",
    "options": ["Height", "Balance", "Width", "None"],
    "correct": "Balance",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 109,
    "question": "The back() method decreases the value of Variable current by____",
    "options": ["Four", "Three", "Two", "One"],
    "correct": "One",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 110,
    "question": "In doubly linked list there is/are_____pointer/s in each node.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 111,
    "question": "Suppose we have the following values to be inserted in constructing AVL tree,",
    "options": [],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 112,
    "question": ", 13, 15, 5, 7, 8 Tell when first rotation will take place.",
    "options": [
      "After inserting node 13",
      "After inserting node 15",
      "After inserting node 5",
      "After inserting node 7"
    ],
    "correct": "After inserting node 7",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 113,
    "question": "Binary search algorithm cannot be applied to ___",
    "options": [
      "Sorted linked list",
      "sorted binary trees",
      "sorted linear array",
      "None of given option"
    ],
    "correct": "Sorted linked list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 114,
    "question": "During the execution of a process operating system constructs focus things for that process which of the following is not part of that process",
    "options": [
      "A section for static data including global variable",
      "Stack",
      "Heap",
      "Linked list"
    ],
    "correct": "Linked list",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 115,
    "question": "Which one of the following method does not change the original value of the argument in the calling function?",
    "options": [
      "Call by passing reference of the argument",
      "Call by passing the address of the argument",
      "Call by passing the value of the argument",
      "None of the given options"
    ],
    "correct": "Call by passing the value of the argument",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 116,
    "question": "_____ is the major factor to see the efficiency of a program.",
    "options": ["Quality", "Time", "Correctness", "None of the given"],
    "correct": "Time",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 117,
    "question": "While implementing stack with an array and to achieve LIFO behavior, we used push and pop elements at ______.",
    "options": [
      "The start of the array",
      "The end of the array",
      "The mid of the array",
      "At least one position before array starting index."
    ],
    "correct": "The end of the array",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 118,
    "question": "A template is a function or class that is written with a ________",
    "options": ["Specific", "Definite", "Generic", "None of the above"],
    "correct": "Generic",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 119,
    "question": "In the linked list implementation of the stack class, where does the push member function places the new entry on the linked list?",
    "options": [
      "After all other entries that are greater than the new entry",
      "At the head",
      "After all other entries that are smaller than the new entry",
      "At the tail"
    ],
    "correct": "At the head",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 120,
    "question": "The next field in the last node in a singly-linked list is set to ________.",
    "options": ["0", "1", "NULL", "False"],
    "correct": "NULL",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 121,
    "question": "Consider the linked list having data [6, 72, 35, 65,25] stored in it. While current pointer is pointing memory location having 72 stored in it. After calling remove() function on the following linked list current point will point to memory location having value?",
    "options": ["6", "35", "65", "25"],
    "correct": "35",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 122,
    "question": "If we write functions for recursive and non recursive inorder traversal method of BST, what will be the difference between its functions prototypes?",
    "options": [
      "Different return types",
      "Different function names",
      "Different arguments list",
      "Nothing will be different"
    ],
    "correct": "Different arguments list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 123,
    "question": "In singly linked list a node comprises of _________ field/s.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 124,
    "question": "Doubly linked list always has ______ NULL pointers in a node.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 125,
    "question": "A BST generated from the data in ascending order is ________.",
    "options": ["Linear", "Nonlinear", "Balanced", "Un sorted"],
    "correct": "Linear",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 126,
    "question": "Linked list is generally considered an example of _______ type of memory location.",
    "options": ["Static", "Compile time", "Dynamic", "None of given options"],
    "correct": "Dynamic",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 127,
    "question": "What’s wrong with following loop? while((i < 10) && (i > 24)){ }",
    "options": [
      "The logical operator && cannot be used in a test condition",
      "The while loop is an exit-condition loop",
      "The test condition is always false",
      "The test condition is always true"
    ],
    "correct": "The test condition is always false",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 128,
    "question": "Making the tree unbalanced, it violates the ______ rule.",
    "options": ["Linked list", "Stack", "AVL", "Queue"],
    "correct": "AVL",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 129,
    "question": "copy() method of list data structure _________",
    "options": [
      "copy first item of list",
      "set one list to be a copy of another",
      "copy last item of list",
      "copy any item of list"
    ],
    "correct": "set one list to be a copy of another",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 130,
    "question": "Deleting a ______ node in BST is a ______ case.",
    "options": [
      "Root, simplest",
      "Left child, simplest",
      "Right child, simplest",
      "Leaf, simplest"
    ],
    "correct": "Leaf, simplest",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 131,
    "question": "We can not remove items randomly from ________",
    "options": ["Stack", "Queue", "Both of these", "None of these"],
    "correct": "Both of these",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 132,
    "question": "NULL is an invalid address and ________.",
    "options": [
      "Accessible",
      "Inaccessible",
      "Points to the start point of the list",
      "Points to the last point of the list"
    ],
    "correct": "Inaccessible",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 133,
    "question": "A stack carries _______ behavior.",
    "options": ["FIFO", "LIFO", "AVCO", "FEFO"],
    "correct": "LIFO",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 134,
    "question": "The tree data structure is a",
    "options": [
      "Linear data structure",
      "Non-linear data structure",
      "Graphical data structure",
      "Data structure like queue"
    ],
    "correct": "Non-linear data structure",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 135,
    "question": "Can we store elements with different data types in a single array?",
    "options": ["Yes", "No", "In some cases", "None of given"],
    "correct": "No",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 136,
    "question": "The lifetime of a transient object can exceed that of application which is accessing it.",
    "options": ["True", "False", "In some cases", "None of the given"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 137,
    "question": "In a complete binary tree, for 25000 nodes the depth will be _______.",
    "options": ["13", "14", "15", "16"],
    "correct": "14",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 138,
    "question": "The smallest value element in a binary search tree(Each node with left and right pointer) lies at",
    "options": [
      "Root Node",
      "Left Child of Root",
      "Right Most Node",
      "Left Most Node"
    ],
    "correct": "Left Most Node",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 139,
    "question": "if we use array to implement list, then there is an issue that is gives difficulty when",
    "options": [
      "We will access values randomly",
      "We will remove data from it",
      "We will increase its size",
      "We will decrease its size"
    ],
    "correct": "We will increase its size",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 140,
    "question": "if there are ___ nodes in an avl tree its levels will be roughly as log2(10 million)",
    "options": ["100 million", "10 million", "5 million", "2 million"],
    "correct": "10 million",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 141,
    "question": "Which one is the correct function call for the following function of calculatincube? int cube(int&num) { . . .",
    "options": ["Cube(&num)", "Cube(&&num)", "Cube(*num)", "Cube(num)"],
    "correct": "Cube(num)",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 142,
    "question": "Which of the following is the correct option for priority Queue?",
    "options": [
      "The type of Queue that is not FIFO i.e the person who comes first may not leave first",
      "The type of Queue that is not FIFO i.e the person who comes first should leave first",
      "The type of Queue that is not FIFO i.e the person who comes first should leave first",
      "The type of Queue that is not FIFO i.e the person who comes first may not leave first"
    ],
    "correct": "The type of Queue that is not FIFO i.e the person who comes first may not leave first",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 143,
    "question": "For String-based Binary Search Tree, We use ASCII values of characters for comparing among letters. This method is known as ___",
    "options": [
      "Lexicographic order",
      "Alphabet coding procedure",
      "Asymmetric technique",
      "heap-based approach"
    ],
    "correct": "Lexicographic order",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 144,
    "question": "Elements in a queue data structure are added from___ and remove from___ .",
    "options": [
      "Rear end. front end",
      "Front end. Rear end",
      "Front end",
      "rear end"
    ],
    "correct": "Rear end. front end",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 145,
    "question": "If numbers 5,222,4,48 are inserted in a queue. Which one will be remove first?",
    "options": ["48", "4", "222", "5"],
    "correct": "5",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 146,
    "question": "A zigzag rotation is performed. In Left-Left case of rotation in AVL tree.",
    "options": ["True", "False", "In some cases", "None of the above"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 147,
    "question": "During deletion of node from BST. if we found this node don't have in- order successor and predecessor. it means this node is____",
    "options": [
      "Left Most node in the binary search tree",
      "Right most node in the binary search tree",
      "Root node",
      "None of the given option"
    ],
    "correct": "None of the given option",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 148,
    "question": "_____ rule applies for evaluating operators of same precedence in an expression",
    "options": [
      "right to left",
      "Cascading",
      "Associative",
      "None of the above"
    ],
    "correct": "Associative",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 149,
    "question": "What will be result of following postfix expression?",
    "options": [],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 150,
    "question": "*+2-",
    "options": ["3", "4", "5", "10"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 151,
    "question": "The main use of AVL tree is:",
    "options": [
      "Searching of data",
      "Storing of data",
      "Insertion of data",
      "Security of data"
    ],
    "correct": "Searching of data",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 152,
    "question": "y = &x[0]; In the above statement, we get the address of the fist location of the array x and store it in y. Here “y” is:",
    "options": ["rvalue", "xvalue", "lvalue", "zvalue"],
    "correct": "lvalue",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 153,
    "question": "what will be postfix expression of the following infix expression? Infix expression a+b*c-d",
    "options": [
      "ab+c*db. abc*+dc. abcd+*-",
      "abc+*d147. Which of the following is the correct conversion of infix to postfix expression? Z+B-(D-H)/K",
      "ZB+D-H-K/",
      "ZB+DH-K-/",
      "ZB+DH-K/-",
      "ZB+DHK--/"
    ],
    "correct": "abc*+d-",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 154,
    "question": "Leaf node of binary search tree contains _________.",
    "options": [
      "One null pointer",
      "Three null pointers",
      "Two null pointers",
      "All of the given"
    ],
    "correct": "Two null pointers",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 155,
    "question": "A tree is an AVL tree if",
    "options": [
      "Any one node ful fills tha AVL condition",
      "At least half of the nodes fulfill the AVL condition",
      "All the nodes fulfill the AVL condition",
      "None of the given options"
    ],
    "correct": "All the nodes fulfill the AVL condition",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 156,
    "question": "The _____ of a binary tree is the maximum level of its leaves (also called the depth).",
    "options": ["Level", "Width", "Height", "None of the above"],
    "correct": "Height",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 157,
    "question": "Memory address is stored in",
    "options": ["Address operator", "Reference", "Pointer", "All of the given"],
    "correct": "Pointer",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 158,
    "question": "A binary tree is said to be a ______ binary tree if every nonleaf node in a binary tree has non-empty left and right sub trees.",
    "options": ["Complete", "Strictly", "AVL", "Perfect"],
    "correct": "Strictly",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 159,
    "question": "“+” is a _________operator.",
    "options": ["Unary", "Binary", "Ternary", "None of the above"],
    "correct": "Binary",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 160,
    "question": "Which of the following a nonlinear tree",
    "options": ["Stack", "Que", "Tree", "Linked List"],
    "correct": "Tree",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 161,
    "question": "For every Process execute the last part of the Memory is for__________of the Program",
    "options": ["Data", "Code", "Stack", "Heap"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 162,
    "question": "While implement non recursive traversal for binary search tree we need to implement________",
    "options": ["Que", "Stack", "Min heap", "Max Heap"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 163,
    "question": "Suppose we have the following values to be inserted in constructing AVL tree,",
    "options": [],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 164,
    "question": ",23,25,10, 12,13 Tell when first rotation will take place.",
    "options": [
      "After increasing Node 25",
      "After increasing Node 23",
      "After increasing Node 10",
      "After increasing Node 12"
    ],
    "correct": "After increasing Node 13",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 165,
    "question": "If a tree has a 50 Node then the total linked in the tree will be",
    "options": ["55", "51", "50", "49"],
    "correct": "49",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 166,
    "question": "The percolate down procedure will move the smaller value ___and Bigger value___",
    "options": ["Left, right", "Right, left", "Down, up", "Up, down"],
    "correct": "Up, down",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 167,
    "question": "Circular Linked List Solve the problem of___pointer/method of the doubly link list.",
    "options": ["Remove", "Null", "Add", "Find"],
    "correct": "Null",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 168,
    "question": "isEmpty() method of stack class will return true when.",
    "options": [
      "Stack is full",
      "Stack is Partially",
      "Stack is not empty or Null",
      "Stack is empty"
    ],
    "correct": "Stack is empty",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 169,
    "question": "“New int[11]” will allocate memory for___integers.",
    "options": ["13", "12", "11", "10"],
    "correct": "11",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 170,
    "question": "For searching a particular number in Binary Search Tree (if it is not present), the maximum number of comparisons will be ________ comparison at each level.",
    "options": ["1", "2", "3", "4"],
    "correct": "1",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 171,
    "question": "In singly linked list which node will keep track of starting position of the list.",
    "options": ["Next Node", "Previous Node", "Head Node", "Last Node"],
    "correct": "Head Node",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 172,
    "question": "If we singly linked list to implement list, then there is an issue that it gives difficulty when we:",
    "options": [
      "Move forward in the list",
      "Move backward in the list",
      "We will increase its size",
      "We will decrease its size"
    ],
    "correct": "Move backward in the list",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 173,
    "question": "Can we store elements with different data types in a single array?",
    "options": ["Yes", "No", "In some cases", "None of the given"],
    "correct": "No",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 174,
    "question": "During union by size method, which data structure is used to improve the balancing of tree?",
    "options": ["Array", "Stack", "Linked List", "Tree"],
    "correct": "Array",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 175,
    "question": "The difference between a \"Binary Tree (BT)\" and a \"Binary Search Tree (BST)\" is that,",
    "options": [
      "A BST has two children per node whereas a BT can have none, one or two children per node",
      "In BST nodes are inserted based on the values they contain",
      "In BT nodes are inserted based on the values they contain",
      "There is no difference"
    ],
    "correct": "In BST nodes are inserted based on the values they contain",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 176,
    "question": "The main use of AVL tree is:",
    "options": [
      "Searching of data",
      "Storing of data",
      "Insertion of data",
      "Security of data e) The expression"
    ],
    "correct": "Searching of data",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 177,
    "question": "if (! heap ->isEmpty() ) checks",
    "options": [
      "Heap is empty",
      "Heap is full",
      "Heap is not empty",
      "Not a valid expression"
    ],
    "correct": "Heap is not empty",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 178,
    "question": "A solution is said to be efficient if it solves the problem within its resource constraints i.e. hardware and time.",
    "options": ["True", "False"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 179,
    "question": "A queue where the dequeue operation does not depend upon FIFO, is called:",
    "options": ["enqueue", "simple queue", "stack", "priority queue"],
    "correct": "priority queue",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 180,
    "question": "In simple or singly linked list there is/are ________ pointer/s in each node.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "One",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 181,
    "question": "Which one of the following statement is correct?",
    "options": [
      "Array size is fixed once it is created",
      "Link List size is fixed once it is created",
      "Binary Search Tree size is fixed once it is created",
      "AVL Tree size is fixed once it is created"
    ],
    "correct": "Array size is fixed once it is created",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 182,
    "question": "Which of the is NOT true regarding the maze generation?",
    "options": [
      "Randomly remove walls until the entrance and exit cells are in same set.",
      "Removing a wall is the same as doing a union operation",
      "Remove a randomly chosen wall if the cells it separates are alreadly in same set",
      "Do not remove a randomly chosen wall if the cells it separates are alreadly in same set."
    ],
    "correct": "Remove a randomly chosen wall if the cells it separates are alreadly in same set",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 183,
    "question": "If Ahmad is cousin of Ali and Ali is cousin of Asad then Ahmad is also cousin of Asad. This statement has the following property",
    "options": ["Reflexivity", "Symmetry", "Transitivity", "All of the given"],
    "correct": "Transitivity",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 184,
    "question": "Stack and Queue can be implemented using ________.",
    "options": [
      "Singly Link List",
      "Binary Tree",
      "Binary Search Tree",
      "AVL Tree"
    ],
    "correct": "Singly Link List",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 185,
    "question": "A Linear Data Structure is the data structure in which data elements are arranged in a sequence or a linear list. Which of the following is Non Linear Data Structure?",
    "options": ["Arrays", "Linked Lists", "Binary Search Trees", "Stack"],
    "correct": "Binary Search Trees",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 186,
    "question": "Recursive call of a function use ________ data structure.",
    "options": ["Linked List", "Queue", "Stack", "Table"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 187,
    "question": "The ________ of a node in a binary tree is defined as the height of its left subtree minus height of its right subtree.",
    "options": ["Height", "Balance", "Width", "None of the above"],
    "correct": "Balance",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 188,
    "question": "Which operation of queue data structure is used to get front element from the queue and then remove it from the queue?",
    "options": ["enqueue()", "dequeue()", "front()", "remove()"],
    "correct": "dequeue()",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 189,
    "question": "Suppose we have been given the following data set for a Queue.",
    "options": ["7 5 2 4", "7 5 2 4", "7 5 2 4 3", "5 2 4 3"],
    "correct": "",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 190,
    "question": "5 2 4 What will be the resultant Queue if we call enqueue(3) method? Note that 7 is the front element whereas 4 is rear element of queue.",
    "options": ["7 5 2 4", "7 5 2 4", "7 5 2 4 3", "5 2 4 3"],
    "correct": "7 5 2 4 3",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 191,
    "question": "In C++, we place the class interface in ________ file.",
    "options": [".cpp", ".cppp", ".h", ".hh"],
    "correct": ".h",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 192,
    "question": "The array in binary search is sub divided ________.",
    "options": [
      "Once",
      "Twice",
      "N time",
      "Untill a sublist is no more divisible"
    ],
    "correct": "Untill a sublist is no more divisible",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 193,
    "question": "If unions are done by weight (size), the depth of any element is never greater than",
    "options": ["log 3n", "log2 n", "n log2 n", "log n*n"],
    "correct": "log2 n",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 194,
    "question": "________ in AVL is logarithmic.",
    "options": ["Updating", "Searching", "Deletion", "Insertion"],
    "correct": "Searching",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 195,
    "question": "What is the depth of any tree if the union operation is performed by height?",
    "options": ["O(N)", "O(N log N)", "O(log N)", "O(M log N)"],
    "correct": "O(log N)",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 196,
    "question": "Avl tree takes maximum ________ time to search an element.",
    "options": ["1.44 Log2n", "Log2(n+n)", "Log2(n+1)+1", "1.88 Log2n"],
    "correct": "1.44 Log2n",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 197,
    "question": "Which of the following is correct about AVL Tree?",
    "options": [
      "It is identical to BST except height of the left and right subtrees can differ by at least 1.",
      "It is identical to BST except height of the left and right subtrees must differ by at least 1.",
      "It is not identical to BST, it is totally different kind of tree.",
      "It is identical to BST except height of the left and right subtrees can differ by at most 1."
    ],
    "correct": "It is identical to BST except height of the left and right subtrees can differ by at most 1.",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 198,
    "question": "\"new int[11]\" will allocate memory for ________ integers.",
    "options": ["10", "11", "12", "13"],
    "correct": "11",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 199,
    "question": "The ________ method of list data structure removes the element residing at the current position",
    "options": ["Add", "Next", "Remove", "Find"],
    "correct": "Remove",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 200,
    "question": "While implementing non-recusive traversal for Binary SearchTree, we need to implement ________ .",
    "options": ["Queue", "Stack", "Min heap", "Max heap"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 201,
    "question": "Doubly Linked List always has ________ NULL pointer/s in a node.",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 202,
    "question": "For a perfect binary tree of height h, having N nodes, the sum of hights of nodes ia ________.",
    "options": ["N - h - 1", "N - 1", "N - 1 + h", "N - (h - 1)"],
    "correct": "N - h",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 203,
    "question": "If there are N elements in an array then the number of maximum steps needed to find an element using Binary Search is ___________.",
    "options": ["N", "N2", "Nlog2N", "log2N"],
    "correct": "log2N",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 204,
    "question": "Here is a small function definition: void f(int i, int &k) { i = 1; k = 2; } Suppose that a main program has two integer variables x and y, which are given the value 0. Then the main program calls f(x,y); What are the values of x and y after the function f finishes?",
    "options": [
      "Both x and y are still 0.",
      "x is now 1, but y is still 0.",
      "x is still 0, but y is now 2.",
      "x is now 1, and y is now 2."
    ],
    "correct": "x is still 0, but y is now 2.",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 205,
    "question": "The worst case of searching in binary search tree (BST) is:",
    "options": [
      "When the data inserted in BST is sorted",
      "When the height of left sub-tree is greater than right sub-tree",
      "When the height of right sub-tree is greater than left sub-tree",
      "When the tree is balanced"
    ],
    "correct": "When the data inserted in BST is sorted",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 206,
    "question": "What will be postfix expression of the following infix expression? Infix Expression: a+b*c-d",
    "options": [
      "ab+c*db) abc*+dc) abcd+*-",
      "abc+*d199. What is the hash function used in linear probing?",
      "hi(x)=hash(x) mod table size",
      "hi(x)=(hash(x) + f(i^2)) mod table size"
    ],
    "correct": "abc*+d-",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 207,
    "question": "What is the hash function used in linear probing?",
    "options": [
      "hi(x)=hash(x) mod table size",
      "hi(x)=(hash(x) + f(i^2)) mod table size",
      "hi(x)= (hash(x)+ f(i)) mod table size",
      "hi(x)= X mod 17"
    ],
    "correct": "hi(x)= (hash(x)+ f(i)) mod table size",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 208,
    "question": "Each operator in a postfix expression refers to the previous ________ operand(s)",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 209,
    "question": "In the statement int& a=b;",
    "options": [
      "a and b pointing to two different memory location",
      "a and b are two different names of the same memory location",
      "a and b are two different variable names",
      "b hold the address of variable a"
    ],
    "correct": "a and b are two different names of the same memory location",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 210,
    "question": "In 1990, Bill pugh proposed an enhancement on linked lists and the new data structure was termed as",
    "options": ["Linked list", "B-Tree", "Skip list", "Spelling checker"],
    "correct": "Skip list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 211,
    "question": "Which of the following statement is NOT correct regarding Table ADT?",
    "options": [
      "In a table, the type of information in columns may be different.",
      "A table consists of deveral columns known as entities",
      "The row of a table is called a record",
      "A major use of table is in databases where we build and use tables for keeping information"
    ],
    "correct": "A table consists of deveral columns known as entities",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 212,
    "question": "A binary tree of N nodes has _____________ .",
    "options": [
      "Log10 N levels",
      "Log2 N levels",
      "N / 2 levels",
      "N x 2 levels"
    ],
    "correct": "Log2 N levels",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 213,
    "question": "If the height of a perfect binary tree is 4. What will be the total number of nodes in it?",
    "options": ["15", "16", "31", "32"],
    "correct": "31",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 214,
    "question": "Which property of equivalence relation is satisfied if we say: Ahmad R(is related to) Ahmad",
    "options": ["Reflexivity", "Symmetry", "Transitivity", "All of the given"],
    "correct": "Reflexivity",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 215,
    "question": "If ahmad is boss of ehsan and ehsan is boss of umer then ahmad is also boss of umer. The above mentioned relation is ________.",
    "options": ["Reflexive", "Symmetry", "Transitive", "None of the given"],
    "correct": "Transitive",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 216,
    "question": "Which of the following statement is false?",
    "options": [
      "Arrays are dense lists and static data structure",
      "data elements in linked list need not be stored in adjecent space in memory",
      "pointers store the next data element of a list",
      "linked lists are collection of the nodes that contain information part and next pointer"
    ],
    "correct": "pointers store the next data element of a list",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 217,
    "question": "Binary search algorithm cannot be applied to ________ .",
    "options": [
      "Sorted linked list",
      "sorted binary trees",
      "sorted linear array",
      "None of the given"
    ],
    "correct": "Sorted linked list",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 218,
    "question": "Suppose there is an image segmented into pixels. Each pixel has ________ neighbor(s).",
    "options": ["0", "4", "8", "16"],
    "correct": "8",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 219,
    "question": "In singly linked list a node consists of two parts:",
    "options": [
      "Object and structure",
      "Two pointers",
      "Two objects",
      "Object and pointer"
    ],
    "correct": "Object and pointer",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 220,
    "question": "A hash function returns a ________ value.",
    "options": ["Integer", "Double", "Float", "Char"],
    "correct": "Integer",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 221,
    "question": "In a tree, we link the nodes in such a way that it ________ a linear structure.",
    "options": ["does not remain", "forms", "reverses", "remains"],
    "correct": "does not remain",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 222,
    "question": "The principal benefit of a link list over a conventional array is that the order of the linked items may be____from the order that the data seems are stored in memory.",
    "options": ["Different", "Identical", "Same", "Equivalent"],
    "correct": "Different",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 223,
    "question": "The Computer memory can be thought of as a/an.",
    "options": ["List", "Queue", "Stack", "Array"],
    "correct": "Array",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 224,
    "question": "Before using the Pop method of a stack, the user must call the__method.",
    "options": ["isFull()", "push()", "pop()", "isEmpty()"],
    "correct": "isEmpty()",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 225,
    "question": "A stack carries____behavior.",
    "options": ["FIFO", "FEFO", "LIFO", "AVCO"],
    "correct": "LIFO",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 226,
    "question": "___Method returns the top element of the stack without removing it.",
    "options": ["Pop()", "Front()", "Push()", "Top()"],
    "correct": "Top()",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 227,
    "question": "In Queue data structure element are removed from_____.",
    "options": ["Pop", "Push", "Rear", "Front"],
    "correct": "Front",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 228,
    "question": "In Queue data structure element are full from_____.",
    "options": ["Pop", "Push", "Rear", "Front"],
    "correct": "Rear",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 229,
    "question": "“end()” method of list performs its tasks in",
    "options": ["Many Steps", "Three Steps", "One Steps", "Two Steps"],
    "correct": "One Steps",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 230,
    "question": "Linked List use____to store data.",
    "options": ["Array", "Variables", "Linked Memory", "2-D Array"],
    "correct": "Linked Memory",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 231,
    "question": "Complete the push method code of stack void push (int x) { A{____}=x}",
    "options": ["Count++", "Count-", "++count", "-count"],
    "correct": "++count",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 232,
    "question": "A template is a Function or Class that is Written a___data type.",
    "options": ["Generic", "None of These", "Define", "Specific"],
    "correct": "Generic",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 233,
    "question": "Trying to remove an element from an empty Stack is called____",
    "options": [
      "Garbage Collection",
      "Overflow stack",
      "Empty collection",
      "Underflow of Stack"
    ],
    "correct": "Underflow of Stack",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 234,
    "question": "Stack and Queue can be implemented using___",
    "options": [
      "Binary Tree",
      "Singly Linked List",
      "AVL Tree",
      "Binary Search Tree"
    ],
    "correct": "Singly Linked List",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 235,
    "question": "A software solution is said to be efficient if it solves the problem.",
    "options": [
      "With its resource constraints",
      "With No Time",
      "By Consuming more hardware resources.",
      "By Using some extra resources."
    ],
    "correct": "With its resource constraints",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 236,
    "question": "we cannot remove items randomly from___",
    "options": ["Stack", "Queue", "Stack and Queue", "List"],
    "correct": "Stack and Queue",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 237,
    "question": "Stack push(15) will push 15 on___",
    "options": [
      "Top of the Stack",
      "Anywhere of the Stack",
      "Middle of the Stack",
      "Bottom of the Stack"
    ],
    "correct": "Top of the Stack",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 238,
    "question": "Which of the following is the correct conservation from infix to postfix expression A*B+C/(E-F).",
    "options": ["ABC*+EF-/", "AB*CFE-/*", "AB*C+EF/*", "AB+C*E-F/"],
    "correct": "AB*C+EF-/",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 239,
    "question": "Convert the Given infix from 12+60-23 of expression in postfix form.",
    "options": ["12+60 23-", "12 60+ -23", "-12 60 -23", "None"],
    "correct": "12 60 + 23 -",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 240,
    "question": "Y=&x[0]; In the above statement, we get the address of the Locatio of the array x and store it in y. Here “Y” is;",
    "options": ["Xvalue", "Zvalue", "Ivalue", "Nvalue"],
    "correct": "Ivalue",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 241,
    "question": "Last Node in Circular Linked list Contains.",
    "options": [
      "Maximum Two points",
      "No Null Pointer",
      "Atleast one Null pointer",
      "None"
    ],
    "correct": "No Null Pointer",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 242,
    "question": "Consider the linked list having data [6, 72, 35, 65,25] stored in it. While current pointer is pointing memory location having 72 stored in it. After calling add(4) function on the following linked list current point will point to memory location having value?",
    "options": ["36", "4", "72", "25"],
    "correct": "4",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 243,
    "question": "there is no such Node whose next filed is NULL which one of the given option support the statement",
    "options": ["Linked List", "Circular Link list", "Array", "Queue"],
    "correct": "Circular Link list",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 244,
    "question": "Generally there is/are _________ case(s) to delete a node from BST.",
    "options": ["1", "2", "3", "4"],
    "correct": "3",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 245,
    "question": ". Which of the following is TRUE about recursive calls",
    "options": ["There is no terminating condition in recursive calls"],
    "correct": "There is a terminating condition in recursive calls",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 246,
    "question": ". What will be the output of following code? Void explode(int& num) { Num++;} Main() { Int power = 15; explode(power);",
    "options": ["16", "14", "17 e) 15"],
    "correct": "16",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 247,
    "question": "From Operating System point of view, the recursive function calls are made with the help of __________.",
    "options": ["Binary Search Tree", "Stack", "Query", "Linked List"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 248,
    "question": "Analyze the given code carefully and identify which type of binary tree traversal this is; Void traversal ( treeNode*treeNode) { if(treeNode !=Null) { cout << *(treeNode->getinfo( ))<< “ ”; Traversal ( treeNode- >getleft( )); Traversal ( treeNode->getRight( )); } }",
    "options": ["Inorder", "Preorder", "Postorder", "Sorted Order"],
    "correct": "Preorder",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 249,
    "question": "Which of the following is correct syntax to declare a const function?",
    "options": [
      "Const int& findMin()",
      "Int& FindMinconst()",
      "Int& findMin() const",
      "int findMin() const"
    ],
    "correct": "Int& findMin() const",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 250,
    "question": "In binary search tree deleting a node is easy if it is a _______________ node",
    "options": ["ROOT", "LEFT", "RIGT", "LEAF"],
    "correct": "LEAF",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 251,
    "question": "If we delete node 2 from the given BST then which node will replace it?",
    "options": ["1", "2", "3", "4"],
    "correct": "3",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 252,
    "question": "The structure of tree with _________ data is like a linked list.",
    "options": ["Sorted", "Small", "Large", "Unsorted"],
    "correct": "Sorted",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 253,
    "question": "We can make a lexicographic order of characters based on their _____________. ",
    "options": [
      "RANDOM choice",
      "ASCII values",
      "Binary DIGITS",
      "Memory Address"
    ],
    "correct": "ASCII values",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 254,
    "question": "The _______of every node should be 1, 0 or -1 otherwise, it will not be an AVL tree. ",
    "options": ["Length", "Balance", "Width", "Size"],
    "correct": "Balance",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 255,
    "question": "What will be the inorder traversal of the given tree?",
    "options": ["15 25 35 45 75", "25 15 35 45 75", "75 35 25 15 45"],
    "correct": "15 25 35 45 75",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 256,
    "question": "The __________ sign before the name of the variable means that the address of the variable is beingpassed : ",
    "options": ["||", "::", "&", "#"],
    "correct": "&",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 257,
    "question": "What will be the return type of the findMin method in the statement given below?int& findMin( ) const; ",
    "options": [
      "Integers Variable",
      "Integer Refrence",
      "Constant Integer",
      "Integer Pointer"
    ],
    "correct": "Integer Refrence",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 258,
    "question": "Which of the following data structure is/are linear type? ",
    "options": ["AVL Tree", "Graphs", "Binary Search Tree", "Heap and Stack"],
    "correct": "Heap and Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 259,
    "question": "Whenever a node is deleted from a binary search tree, _____________ has to be maintained. ",
    "options": [
      "In Order Traversal",
      "Any Traversal can be maintained",
      "Post order Traversal",
      "Pre order Traversal"
    ],
    "correct": "In Order Traversal",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 260,
    "question": "In the perspective of memory organization each process is divided into _______ sections. ",
    "options": ["2", "5", "4", "3"],
    "correct": "4",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 261,
    "question": "To create a reference variable we need to use ______ sign. ",
    "options": ["Ampersand", "Dollar", "Asterisk", "sigma"],
    "correct": "Ampersand",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 262,
    "question": "_____ of an empty AVL tree is defined to be -1 ",
    "options": ["Height", "Size", "Width", "Length"],
    "correct": "Height",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 263,
    "question": "In level-order traversal for Binary Search Tree, __________ data structure is used. ",
    "options": ["Queue", "Linked List", "Stack", "Heap"],
    "correct": "Queue",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 264,
    "question": "At a particular node, the difference in heights of its left and right subtree gives the _________ of thenode ",
    "options": ["Right Subtree", "Balance", "Left Subtree", "Height"],
    "correct": "Balance",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 265,
    "question": "If we return the reference of a local variable from a function it will cause : ",
    "options": [
      "Refrence Overloading",
      "Duplication of local variables",
      "Deletion of local variables from memory",
      "Dangling refrence"
    ],
    "correct": "Dangling refrence",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 266,
    "question": "We can calculate the ___________ of a subtree by counting its levels from the bottom. ",
    "options": ["Height", "Data Items", "Nodes", "Balance"],
    "correct": "Height",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 267,
    "question": "In a strictly complete binary tree the number of _ at any level k will be 2k . ",
    "options": ["Link", "Nodes", "Children", "Sets"],
    "correct": "Nodes",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 268,
    "question": "In Preorder traversal of a binary tree the second step is ____________ ",
    "options": [
      "Traverse the right subtree",
      "Traverse the root",
      "Traverse the leaf nodes",
      "Traverse the left subtree"
    ],
    "correct": "Traverse the left subtree",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 269,
    "question": "Level-order traversal for Binary Search Tree can be implemented, ___",
    "options": [
      "using Queue",
      "using Stack",
      "using recursion",
      "using Linked List"
    ],
    "correct": "using Queue",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 270,
    "question": "The _____ symbol is used when we want to get the value of a variable using pointer. ",
    "options": ["*", "||", "#", "::"],
    "correct": "*",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 271,
    "question": "After deletion of a node from a binary search tree _______ traversal method should be maintained. ",
    "options": ["Inorder", "Post order", "Level Order", "Preorder"],
    "correct": "Inorder",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 272,
    "question": "We can use Binary Search Tree with _________________",
    "options": [
      "Integer Data only",
      "String Data Only",
      "Both",
      "Non-Integer Data Inly"
    ],
    "correct": "Both",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 273,
    "question": "In which traversal method root node is visited at last step ",
    "options": ["Postorder", "Level order", "Inorder", "Preorder"],
    "correct": "Postorder",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 274,
    "question": "If a function has recursive call as the last statement, it is known as __________. ",
    "options": [
      "Function recursion",
      "Tail recursion",
      "Last recursion",
      "Local Recursion"
    ],
    "correct": "Tail recursion",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 275,
    "question": "The process of getting the value of a variable using pointers is called: ",
    "options": [
      "Dereferencing",
      "Refrencing",
      "Memory Deallocation",
      "Memory allocation"
    ],
    "correct": "Dereferencing",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 276,
    "question": "parameter passing (by value or by reference) is similar to PASCAL. ",
    "options": ["C++", "COBOL", "JAVA", "FORTRAN"],
    "correct": "C++",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 277,
    "question": "Which one of the following case is the most complicated case to delete a node from BST? ",
    "options": [
      "Node to be deleted has both the left and right children",
      "Node to be deleted has both the left children",
      "NONE"
    ],
    "correct": "Node to be deleted has both the left and right children",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 278,
    "question": "When a function calling itself is called as __________. ",
    "options": ["Inline", "Recursion", "Iteration", "Nested Loo"],
    "correct": "Recursion",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 279,
    "question": "is used for Reference variables in C+ ",
    "options": ["&", "@", "#", "!"],
    "correct": "&",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 280,
    "question": "Function signatures are also called : ",
    "options": [
      "Function Prototype",
      "Function Overloading",
      "Function Defination",
      "Function Overriding"
    ],
    "correct": "Function Prototype",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 281,
    "question": "Link List can be special case of, ",
    "options": ["Parse Tree", "AVL tree", "Binary Search Tree", "Heap"],
    "correct": "Binary Search Tree",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 282,
    "question": "Which of the following data structures is typically a linear data structure?",
    "options": ["Binary Search Tree", "Stack", "Graph", "AVL Tree"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 283,
    "question": "A queue where the de-queue operation depends not on FIFO, is called a priority queue",
    "options": ["False", "True"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 284,
    "question": "The data of the problem is of 2GB and the hard disk is of 1GB capacity, to solve this problem we should",
    "options": [
      "Use better data structures",
      "Increase the hard disk space",
      "Use the better algorithm",
      "Use as much data as we can store on the hard disk"
    ],
    "correct": "Increase the hard disk space",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 285,
    "question": "Consider the function X as under int X (int& Value) { return Value; } Now a and b are integers in a calling function. Which one of the following is a valid call to the above function X.",
    "options": [
      "a = X (b) ;",
      "a = X (&b) ;",
      "a = X (*b) ;",
      "None of the given options Here function argument passing by reference method is used, so when we call a function we will give the variable reference as parameter."
    ],
    "correct": "a = X (b) ;",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 286,
    "question": "In the call by value methodology, a copy of the object is passed to the called function.",
    "options": ["False", "True"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 287,
    "question": "The tree data structure is a",
    "options": [
      "Linear data structure",
      "Non - linear data structure",
      "Graphical data structure",
      "Data structure like queue"
    ],
    "correct": "Non - linear data structure",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 288,
    "question": "When should you use a const reference parameter?",
    "options": [
      "Whenever the parameter has huge size.",
      "Whenever the parameter has huge size, the function changes the parameter within its body, and you do NOT want these changes to alter the actual argument.",
      "Whenever the parameter has huge size, the function changes the parameter within its body, and you DO want these changes to alter the actual argument.",
      "Whenever the parameter has huge size, and the function does not change the parameter within its body. Declaring a parameter as a const simply means that the function can’t change the value of its parameters."
    ],
    "correct": "Whenever the parameter has huge size, and the function does not change the parameter within its body. Declaring a parameter as a const simply means that the function can’t change the value of its parameters.",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 289,
    "question": "Here is the start of a C++ class declaration: class foo { public: void x(foo f); void y(const foo f); void z(foo f) const; ... Which of the three member functions can alter the PRIVATE member variables of the foo object that activates the function?",
    "options": [
      "Only x can alter the private member variables of the object that activates the function.",
      "Only y can alter the private member variables of the object that activates the function.",
      "Only z can alter the private member variables of the object that activates the function.",
      "Two of the functions can alter the private member variables of the object that activates the function. Only the x and y can alter the private member variable of the foo class object . Last Option is more correct but not exact . In the last option the two function name are not mentioned"
    ],
    "correct": "Only x can alter the private member variables of the object that activates the function.",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 290,
    "question": "What is the maximum depth of recursive calls a function may make?",
    "options": [
      "1",
      "2",
      "n (where n is the argument)",
      "There is no fixed maximum"
    ],
    "correct": "There is no fixed maximum",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 291,
    "question": "Suppose n is the number of nodes in a complete Binary Tree then maximum steps required for a search operation are,",
    "options": ["Log 2 (n+1) - 1", "Log 2 (n+1)", "Log 2 (n) – 1", "Log 2 (n)"],
    "correct": "Log 2 (n+1) - 1",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 292,
    "question": "In the linked list implementation of the stack class, where does the push member function places the new entry on the linked list?",
    "options": [
      "At the head",
      "At the tail",
      "After all other entries that are greater than the new entry.",
      "After all other entries that are smaller than the new entry."
    ],
    "correct": "At the head",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 293,
    "question": "Suppose we have a circular array implementation of the queue class, with ten items in the queue stored at data[2] through data[11]. The CAPACITY is 42, i.e., the array has been declared to be of size 42. Where does the push member function place the new entry in the array?",
    "options": ["data[1]", "data[2]", "data[11]", "data[12 ]"],
    "correct": "data[12 ]",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 294,
    "question": "The expression AB+C* is called?",
    "options": [
      "Prefix expression",
      "Postfix expression",
      "Infix expression",
      "None of these"
    ],
    "correct": "Postfix expression",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 295,
    "question": "_________ is a binary tree where every node has a value, every node's left subtree contains only values less than or equal to the node's value, and every node's right subtree contains only values that are greater then or equal?",
    "options": [
      "Strictly Binary Tree",
      "Binary Search tree Click here f or detail",
      "AVL tree",
      "All of these"
    ],
    "correct": "Binary Search tree Click here f or detail",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 296,
    "question": "Consider the following binary search tree (BST):\nIf node A in the BST is deleted, which two nodes are the candidates to take its place?",
    "options": ["J and I", "H and E", "D and E", "L and M"],
    "correct": "D and E",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 297,
    "question": "Which operation of queue data structure is used to get the front element from the queue and then remove it from the queue?",
    "options": ["enqueue()", "dequeue()", "front()", "remove()"],
    "correct": "dequeue()",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 298,
    "question": "We access elements in AVL Tree in,",
    "options": [
      "Linear way only",
      "Non Linear way only",
      "Both linear and non linear ways",
      "None of the given options."
    ],
    "correct": "Both linear and non linear ways",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 299,
    "question": "( Marks: 2 ) AVL Tree is,",
    "options": [
      "Non Linear data structure",
      "Linear data structure",
      "Hybrid data structure (Mixture of Linear and Non Linear)",
      "None of the given options.\nMIDTERM EXAMINATION Spring 2010"
    ],
    "correct": "Non Linear data structure",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 300,
    "question": "Which one of the following statement is NOT correct .",
    "options": [
      "In linked list the elements are necessarily to be contiguous",
      "In linked list the elements may locate at far positions in the memory",
      "In linked list each element also has the next to it",
      "In an array the elements are contiguous"
    ],
    "correct": "In linked list the elements are necessarily to be contiguous",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 301,
    "question": "( Mark s: 1 ) - Please choose one Each operator in a postfix expression refers to the previous ________ operand(s).",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "Two",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 302,
    "question": "Which one of the following calling methods does not change the original value of the argument in the calling function?",
    "options": [
      "None of the given options",
      "Call by passing the value of the argument",
      "Call by passing reference of the argument",
      "Call by passing the address of the argument"
    ],
    "correct": "Call by passing the value of the argument",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 303,
    "question": "A tree is an AVL tree if",
    "options": [
      "Any one node fulfills the AVL condition",
      "At least half of the nodes fulfill the AVL condition",
      "All the nodes fulfill the AVL condition",
      "None of the given options"
    ],
    "correct": "All the nodes fulfill the AVL condition",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 304,
    "question": "Suppose currentNode refers to a node in a linked list (using the Node class with member variables called data and nextNode). What statement changes currentNode so that it refers to the next node?",
    "options": [
      "currentNode ++;",
      "currentNode = nextNode;",
      "currentNode += nextNode;",
      "currentNode = currentNode - >nextNode;"
    ],
    "correct": "currentNode = currentNode - >nextNode;",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 305,
    "question": "A queue where the de-queue operation depends not on FIFO, is called a priority queue",
    "options": ["False", "True"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 306,
    "question": "Which one is a self- referential data type?",
    "options": ["Stack", "Queue", "Link list", "All of these"],
    "correct": "Link list",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 307,
    "question": "Each node in doubly link list has,",
    "options": ["1 pointer", "2 pointers", "3 pointers", "4 pointers"],
    "correct": "2 pointers",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 308,
    "question": "I have implemented the queue with a linked list, keeping track of a front pointer and a rear pointer. Which of these pointers will change during an insertion into an EMPTY queue?",
    "options": [
      "Neither changes",
      "Only front pointer changes.",
      "Only rear pointer changes.",
      "Both change."
    ],
    "correct": "Both change.",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 309,
    "question": "Consider the following tree. How many of the nodes have at least one sibling? (Assuming a standard tree structure is implied, e.g. a root with children)",
    "options": ["8", "7", "5", "6"],
    "correct": "6",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 310,
    "question": "The nodes with no successor are called _________",
    "options": ["Root Nodes", "Leaf Nodes", "Both of these", "None of these"],
    "correct": "Leaf Nodes",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 311,
    "question": "AVL Tree is,",
    "options": [
      "Non Linear data structure Click here for detail",
      "Linear data structure",
      "Hybrid data structure (Mixture of Linear and Non Linear)",
      "None of the given options."
    ],
    "correct": "Non Linear data structure",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 312,
    "question": "We access elements in AVL Tree in,",
    "options": [
      "Linear way only",
      "Non Linear way only",
      "Both linear and non linear ways",
      "None of the given options."
    ],
    "correct": "Both linear and non linear ways",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 313,
    "question": "A binary search tree should have minimum of one ________ node/s at each level,",
    "options": ["One", "Two", "Three", "Four"],
    "correct": "One",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 314,
    "question": "Consider the following statements. ( i ) A binary tree can contain at least $2^L$ Nodes at level L. ( ii ) A complete binary tree of depth $d$ is a binary tree that contains $2^L$ Nodes at each level L between 0 and d, both inclusive. ( iii ) The total number of nodes ($T_n$) in a complete binary tree of depth $d$ is $2^{d+1} - 1$. ( iv ) The height of the complete binary tree can be written as $h = log_2 (T_n+1) - 1$ where $T_n$ is Total number of Nodes. Which one of the following is correct in respect of the above statements regarding the Binary trees?",
    "options": [
      "(i) and (iii) only",
      "(i), (ii) and (iii) only",
      "(ii) and (iii) only",
      "(ii), (iii) and (iv) only"
    ],
    "correct": "(ii), (iii) and (iv) only",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 315,
    "question": "“+” is a _________ operator.",
    "options": [
      "Unary",
      "Binary",
      "Ternary",
      "None of the above MIDTERM EXAMINATION Spring 2010"
    ],
    "correct": "Binary",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 316,
    "question": "A subscript of an array may be an integer or an integer expression.",
    "options": ["True", "False"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 317,
    "question": "Doubly Linked List always has one NULL pointer.",
    "options": ["True", "False"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 318,
    "question": "In which of the traversal method, the recursive calls can be used to traverse a binary tree ?",
    "options": [
      "In preorder traversal only",
      "In inorder traversal only",
      "In postorder traversal only",
      "All of the given options"
    ],
    "correct": "All of the given options",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 319,
    "question": "A tree is an AVL tree if",
    "options": [
      "Any one node fulfills the AVL condition",
      "At least half of the nodes fulfill the AVL condition",
      "All the nodes fulfill the AVL conditi on",
      "None of the given options"
    ],
    "correct": "All the nodes fulfill the AVL conditi on",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 320,
    "question": "Suppose currentNode refers to a node in a linked list (using the Node class with member variables called data and nextNode). What boolean expression will be true when cursor refers to the tail node of the list?",
    "options": [
      "(currentNode == null)",
      "(currentNode ->nextNode == null)",
      "(nextNode.data == null)",
      "(currentNode.data == 0.0)"
    ],
    "correct": "(currentNode ->nextNode == null)",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 321,
    "question": " - Suppose that the class declaration of SomeClass includes the following function prototype. bool LessThan( SomeClass anotherObject ); Which of the following tests in the client code correctly compares two class objects alpha and beta?",
    "options": [
      "if (alpha < beta)",
      "if (alpha.LessThan(beta))",
      "if (LessThan(alpha, beta))",
      "if (LessThan(alpha).beta)"
    ],
    "correct": "if (alpha.LessThan(beta))",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 322,
    "question": "In C++ what is the operation that you can not do with primitive types?",
    "options": [
      "Assign a value to primitive type using a literal",
      "Declare primitive types to be constant using the Const keyword",
      "Create a new instance of primitive type with New keyword Click here for Detail",
      "None of these"
    ],
    "correct": "Create a new instance of primitive type with New keyword Click here for Detail",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 323,
    "question": "The operation for adding an entry to a stack is traditionally called :",
    "options": ["add", "append", "insert", "push"],
    "correct": "push",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 324,
    "question": "The operation for removing an entry from a stack is traditionally called:",
    "options": ["delete", "peek", "pop", "remove"],
    "correct": "pop",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 325,
    "question": "Consider the following sequence of push operations in a stack: stack.push(’7’); stack.push(’8’); stack.push(’9’); stack.push( ’10’); stack.push(’11’); stack.push(’12’); (This question is incomplete as it doesn't ask for a result, but if it were asking for the contents of a pop sequence, it would be the reverse of the pushes. Assuming it asks for a common invalid output sequence in a multiple-choice setting where correct is assumed to be an option):",
    "options": [
      "7 8 9 10 11 12",
      "9 8 11 10 7 12",
      "9 10 8 11 12 7",
      "9 10 8 12 7 11"
    ],
    "correct": "7 8 9 10 11 12",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 326,
    "question": "________ is the maximum number of nodes that you can have on a stack-linked list ?",
    "options": [
      "Zero",
      "2n (where n is the number of nodes in linked list)",
      "Any Number",
      "None of these"
    ],
    "correct": "Any Number",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 2
  },
  {
    "id": 327,
    "question": "( M a r k s: 1 ) Which of the following can be used to reverse a string value,",
    "options": ["Stack", "Queue", "Both of these", "None of these"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 328,
    "question": "AVL Tree is,",
    "options": [
      "Non Linear data structure",
      "Linear data structure",
      "Hybrid data structure (Mixture of Linear and Non Linear)",
      "None of the given options."
    ],
    "correct": "Non Linear data structure",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 329,
    "question": "The following are statements related to queues. (i) The last item to be added to a queue is the first item to be removed (ii) A queue is a structure in which both ends are not used (iii) The last element hasn’t to wait until all elements preceding it on the queue are removed (iv)A queue is said to be a last-in-first-out list or LIFO data structure. Which of the above is/are related to normal queues?",
    "options": [
      "(iii) and (ii) only",
      "(i), (ii) and (iv) only",
      "(ii) and (iv) only",
      "None of the given options"
    ],
    "correct": "None of the given options",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 330,
    "question": "An array is a group of consecutive related memory locations.",
    "options": ["True", "False\nMIDTERM EXAMINATION Spring 20 09"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 4
  },
  {
    "id": 331,
    "question": "In an array we can store data elements of different types.",
    "options": ["True", "False"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 332,
    "question": "In an array list the current element is",
    "options": [
      "The first element",
      "The middle element",
      "The last element",
      "The element where the current pointer points to"
    ],
    "correct": "The element where the current pointer points to",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 333,
    "question": "Which one of the following calling methods does not change the original value of the argument in the calling function?",
    "options": [
      "None of the g iven options",
      "Call by passing the value of the argument",
      "Call by passing reference of the argument",
      "Call by passing the address o f the argument"
    ],
    "correct": "Call by passing the value of the argument",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 334,
    "question": "Which one of the following statements is NOT correct?",
    "options": [
      "Array size can be changed after its creation.",
      "Link List size can be changed after its creation",
      "Binary Search Tree size can be changed after its creation",
      "AVL Tree size can be changed after its creation"
    ],
    "correct": "Array size can be changed after its creation.",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 335,
    "question": " - Please c hoose one Suppose that the class declaration of SomeClass includes the following function prototype. bool LessThan( SomeClass anotherObject ); Which of the following tests in the client code correctly compares two class objects alpha and beta?",
    "options": [
      "if (al pha < beta)",
      "if (alpha.LessThan(beta))",
      "if (LessThan(alpha, beta))",
      "if (LessThan(alpha).beta)"
    ],
    "correct": "if (alpha.LessThan(beta))",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 336,
    "question": " - A queue is a ----- data structure, whereas a stack is a ----- data structure.",
    "options": ["FIFO, LIFO", "LIFO,FIFO", "none of these", "both of these"],
    "correct": "FIFO, LIFO",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 337,
    "question": "Which one of the following operators has h igher priority than all of others?",
    "options": [
      "Multiplication operator",
      "Minus operator",
      "Plus operator",
      "Exponentiation operator"
    ],
    "correct": "Exponentiation operator",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 338,
    "question": "Each node in Binary Search Tree has",
    "options": ["1 pointer", "2 pointers", "3 pointers", "4 pointers"],
    "correct": "2 pointers",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 339,
    "question": "Please choose one Four statements about trees are below. Three of them are correct. Which one is INCORRECT?",
    "options": [
      "Trees are recursively defined multi - dimensional data structures tree",
      "The order of a tree indicates a maximum number of children allowed at each node of the",
      "A search tree is a special type of tree where all values (i.e. keys) are ordered",
      "If Tree1 's size is greater than Tree2 's size, then the height of Tree1 must also be greater than Tree2' s height."
    ],
    "correct": "If Tree1 's size is greater than Tree2 's size, then the height of Tree1 must also be greater than Tree2' s height.",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 340,
    "question": "Which of the following is \"TRUE\" about arrays,",
    "options": [
      "We can increase the size of arrays after their creation.",
      "We can decrease the size of arrays after their c reation.",
      "We can increase but can't decrease the size of arrays after their creation.",
      "We can neither increase nor decrease the array size after their creation."
    ],
    "correct": "We can neither increase nor decrease the array size after their creation.",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 341,
    "question": "Searching an element in an AV L tree take maximum in AVL tree ,",
    "options": [
      "Log 2 (n+1) time (where n is no. of nodes",
      "Log 2 (n+1) - 1",
      "1.44 Log 2 n",
      "1.66 Log 2 n"
    ],
    "correct": "1.44 Log 2 n",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 342,
    "question": "There is/are case/s for rotation in an AVL tree,",
    "options": ["1", "3", "2", "4"],
    "correct": "4",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 343,
    "question": "Consider the following statements. (i) A binary tree ca n contain at least $2^L$ Nodes at level L. (ii) A complete binary tree of depth $d$ is a binary tree that contains $2^L$ Nodes at each level L between 0 and d, both inclusive. (iii) The total number of nodes ($T_n$) in a complete binary tree of depth $d$ is $2^{d+1} - 1$. (iv) The height of the complete binary tree can be written as $h = log_2 (T_n+1) - 1$ where $T_n$ is Total number of Nodes. Which one of the following is correct in respect of the above statements regarding the Binary trees?",
    "options": [
      "(i) and (iii) only",
      "(i), (ii) and (iii) only",
      "(ii) and (iii) only",
      "(ii), (iii) and (iv) only"
    ],
    "correct": "(ii), (iii) and (iv) only",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 344,
    "question": "Consider the following infix expres sion. $5 + 6/2$ If one converts the above expression into postfix, what would be the resultant expression?",
    "options": ["56/ + 2", "5 6 2 / +", "5 6 / 2 +", "/62 + 5"],
    "correct": "5 6 2 / +",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 345,
    "question": "Which of the following is a no n linear data structure?",
    "options": ["Linked List", "Stack", "Queue", "Tree"],
    "correct": "Tree",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 346,
    "question": "“+” is a operator.",
    "options": ["Unary", "Binary", "Ternary", "None of the above"],
    "correct": "Binary",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 347,
    "question": "Which one of the following is a valid postfix expression?",
    "options": [
      "ab+c*d -",
      "abc*+d - (According to rule)",
      "abc+*d -",
      "(abc*)+d -"
    ],
    "correct": "abc*+d -",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 348,
    "question": "The tree data structure is a",
    "options": [
      "Linear data structure",
      "Non - linear data structure",
      "Graphical data structure",
      "Data structure like queue Que stion No: 3 A Compound Data Structure is the data structure which can have multiple data items of same type or of diff erent types. Which of the following can be considered compound data structure?",
      "Arrays",
      "LinkLists",
      "Binary Search Trees",
      "All of the given options"
    ],
    "correct": "Non - linear data structure",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 349,
    "question": "Suppose a pointer has been declared in main but has not assigned any variable address then",
    "options": [
      "That pointer points to First byte in main function",
      "That pointer contains a NULL value",
      "None of these",
      "That pointer points to any memory address"
    ],
    "correct": "That pointer contains a NULL value",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 350,
    "question": "( Marks : 1 ) - Please choose one Here is the start of a C++ class declaration: class foo { public: void x(foo f); void y(const foo f); void z(foo f) const; ... Which of the three member functions can alter the PRIVATE member variables of the foo object t hat activates the function?",
    "options": [
      "Only x can alter the private member variables of the object that activates the function.",
      "Only y can alter the private member variables of the object that activates the function.",
      "Only z can alter the private member variabl es of the object that activates the function.",
      "Two of the functions can alter the private member variables of the object that activates the function. Only the x and y can alter the private member variable of the foo class object. Last Option is more correct but not exact. In the last option the two function name are not mentioned"
    ],
    "correct": "Only x can alter the private member variables of the object that activates the function.",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 5
  },
  {
    "id": 351,
    "question": "The operation for removing an entry from a stack is traditionally called:",
    "options": ["delete", "peek", "pop", "remove"],
    "correct": "pop",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 352,
    "question": "Which statement of the following statements is incorrect?",
    "options": [
      "Lists can be implemented by using arrays or linked lists",
      "A list is a sequence of one or more data items",
      "Stack is a special kind of list in which all insertions and deletions take place at one end",
      "Stacks are easier to implement than lists"
    ],
    "correct": "Stacks are easier to implement than lists",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 353,
    "question": "Parameters in function call are passed using,",
    "options": ["Stack", "Queue", "Binary Search Tree", "AV L Tree"],
    "correct": "Stack",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 5
  },
  {
    "id": 354,
    "question": "Consider the following sequence of push operations in a stack: stack.push(’7’); stack.push(’8’); stack.push(’9’); stack.push(’10’); stack.push(’11’); stack.push(’12’);",
    "options": [
      "7 8 9 10 11 12",
      "9 8 11 10 7 12",
      "9 10 8 11 12 7",
      "9 10 8 12 7 11"
    ],
    "correct": "7 8 9 10 11 12",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 355,
    "question": "What is the maximum depth of recursive calls a function may make?",
    "options": [
      "1",
      "2",
      "n (where n is the argument)",
      "There is no fixed maximum"
    ],
    "correct": "There is no fixed maximum",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 356,
    "question": "( Marks: 1 ) - Please choose one Consider the following function: void test_a(int n) { cout << n << \" \"; if (n>0) test_a(n - 2); } What is printed by the call test_a(4)?",
    "options": ["4 2 0", "0 2 4", "0 2", "2 4"],
    "correct": "4 2 0",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 357,
    "question": "Queu e follows,",
    "options": [
      "Last in First out",
      "First in Last out",
      "First in First out",
      "None of these"
    ],
    "correct": "First in First out",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 358,
    "question": "is a binary tree where every node has a value, every node's left subtree contains only values less than or equal to the node's value, and every node's right subtree contains only values that are greater then or equal ?",
    "options": [
      "Strictly Binary Tree",
      "Binary Search tree",
      "AVL tree",
      "All of these"
    ],
    "correct": "Binary Search tree",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 359,
    "question": "Four statements about trees are below. Three of them are correct. Which one is INCORRECT?",
    "options": [
      "Trees are recursively defined multi - dimensional data structures",
      "The order of a tree indicates a maximum number of childen allowed at each node of the tree",
      "A search tree is a special type of tree where all values (i.e. keys) are ordere d",
      "If Tree1 's size is greater than Tree2 's size, then the height of Tree1 must also be greater than Tree2' s height."
    ],
    "correct": "If Tree1 's size is greater than Tree2 's size, then the height of Tree1 must also be greater than Tree2' s height.",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 4
  },
  {
    "id": 360,
    "question": "Below is a binary search tree. If we delete the value 50 using the algorithm we discus sed, what value will be in the root of the remaining tree? (Assuming 50 is the root, its successor is 60 and predecessor is 40. The standard algorithm often uses the in-order successor, which is 60).",
    "options": ["50", "60", "70", "80"],
    "correct": "60",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 5
  },
  {
    "id": 361,
    "question": "Is a data structure that can grow easily dynamically at run time without having to copy existing elements?",
    "options": [
      "Array",
      "List",
      "Both of these",
      "None of these MIDTERM EXAMINATION Spring 20 09"
    ],
    "correct": "List",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 362,
    "question": "Which one of the following statement is NOT correct .",
    "options": [
      "In linked list the elements are necessarily to be contiguous",
      "In linked list the elements may locate at far positions in the memory",
      "In linked list each element also has the address of the element next to it",
      "In an array the elements are contiguous"
    ],
    "correct": "In linked list the elements are necessarily to be contiguous",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 363,
    "question": "In a program a reference variable, say x, can be declared as",
    "options": ["int &x ;", "int *x ;", "int x ;", "None of the given options"],
    "correct": "int &x ;",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 1
  },
  {
    "id": 364,
    "question": "Linked lists are collections of data items \"lined up in a row\" , insertions and deletions can be made only at the front and the back of a linked list.",
    "options": ["True", "False"],
    "correct": "False",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 365,
    "question": "A Linear Data Structure is the data st ructure in which data elements are arranged in a sequence or a linear list. Which of the following is Non Linear Data Structure?",
    "options": ["Arrays", "LinkLists", "Binary Search Trees", "None of these"],
    "correct": "Binary Search Trees",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 366,
    "question": "A queue where the de-queue operation depends not on FIFO, is called a priority queue ",
    "options": ["False      ", " True"],
    "correct": " True",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 2
  },
  {
    "id": 367,
    "question": "Which one of the following statements is correct? ",
    "options": [
      " Array size is fixed once it is created",
      " Link List size is fixed once it is created.",
      "Binary Search Tree size is  fixed once it is created",
      " AVL Tree size is fixed once it is created"
    ],
    "correct": " Array size is fixed once it is created",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 1
  },
  {
    "id": 368,
    "question": "Which one of the following is correct about pointers?",
    "options": [
      "T hey always point to  different memory locations",
      "They may point to a single  memory location",
      "The address of two pointer variables is same",
      " None of these      "
    ],
    "correct": "They may point to a single  memory location",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 3
  },
  {
    "id": 369,
    "question": "Which of the following abstract data types are NOT used by Integer Abstract Data type group? ",
    "options": ["short", "Int        ", "float        ", "long        "],
    "correct": "float        ",
    "explanation": "N/A",
    "difficulty": "Medium",
    "importance": 3
  },
  {
    "id": 370,
    "question": " - P lease choose one The operation for adding an entry to a stack is traditionally called :",
    "options": ["add        ", "append        ", "insert        ", "push"],
    "correct": "push",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 371,
    "question": "The operation for removing an entry from a stack is traditionally called:",
    "options": ["delete        ", "peek        ", "pop", "remove        "],
    "correct": "pop",
    "explanation": "N/A",
    "difficulty": "Easy",
    "importance": 4
  },
  {
    "id": 372,
    "question": "We can add elements in QUEUE From _________",
    "options": [
      "Front        ",
      "Rear",
      "From Both Rare and Fr ont        ",
      "None of these        "
    ],
    "correct": "Rear",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 373,
    "question": "The difference between a binary tree and a binary search tree is that ,a binary search tree has ",
    "options": [
      "two children per node whereas a binary tree can have none, on e, or two children per node Click here for detail ",
      " in binary search tree nodes are inserted based on the values they contain",
      "in binary tree nodes are inse rted based on the values they contain ",
      "none of these       "
    ],
    "correct": " in binary search tree nodes are inserted based on the values they contain",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 374,
    "question": "Suppose n is the number of nodes in a complete Binary Tree then maximum steps required for a search operation are,",
    "options": [
      " Log 2 (n+1) - 1",
      "Log  2 (n+1)",
      "Log  2 (n) – 1",
      "Log  2 (n)"
    ],
    "correct": " Log 2 (n+1) - 1",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 3
  },
  {
    "id": 375,
    "question": "The following is a segment of a C program. int pqr(BinaryNode t) { if (t == null ) return -1; else return 1+max(pqr(t.left),pqr(t.right)) } Identify, what the above program intend(s) to do?",
    "options": [
      "Compute the height of a  binary tree using an in-order traversal",
      "Compute the height of a  binary tree using a pre-order traversal",
      "Compute the depth of a binary tree using a pre -order traversal",
      "Compute the depth o f a   binary tree using a post-order traversal"
    ],
    "correct": "Compute the depth o f a   binary tree using a post-order traversal",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 2
  },
  {
    "id": 376,
    "question": "Consider the following infix expression: $3 + 5 * 6 – 7 * (8 + 5)$ Which of the following is a correct equivalent expression(s) for the above?",
    "options": [
      "3 6 5 + * 7 5 8 + - *",
      "3 6 5 7 5 8 + * + - *",
      "3 5 6 + * 7 8 5 + - *",
      "3 5 6 * + 7 8 5 + * -"
    ],
    "correct": "3 5 6 * + 7 8 5 + * -",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  },
  {
    "id": 377,
    "question": "An array is a group of consecutive related memory locations.",
    "options": ["True", "False"],
    "correct": "True",
    "explanation": "N/A",
    "difficulty": "Hard",
    "importance": 1
  }
]
